FIFO###############################################
#include<stdio.h>
int main()
{
    int i,j,n,a[50],frame[10],fno,k,avail,pagefault=0;
    printf("\nEnter the number of Frames : ");
    scanf("%d",&fno);
    printf("\nEnter number of reference string :");
    scanf("%d",&n);
    printf("\n Enter the Reference string :\n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<fno;i++)
        frame[i]= -1;
    j=0;
    printf("\nFIFO PAGE REPLACEMENT ALGORITHM\n\nThe given reference string is:\n\n");
    for(i=0;i<n;i++)
    {
        printf(" %d ",a[i]);
    }
    printf("\n");
    for(i=0;i<n;i++)
    {
        printf("\nReference No %d-> ",a[i]);
        avail=0;
        for(k=0;k<fno;k++)
            if(frame[k]==a[i])
                    avail=1;
        if (avail==0)
        {
            frame[j]=a[i];
            j = (j+1) % fno;
            pagefault++;
            for(k=0;k<fno;k++)
                if(frame[k]!=-1)
                    printf(" %2d",frame[k]);
        }
        printf("\n");
    }
    printf("\nPage Fault Is %d",pagefault);
    return 0;
}

LRU######################################################################################
#include<stdio.h>
{


int main()
    int i,j,l,max,n,a[50],frame[10],flag,fno,k,avail,pagefault=0,lru[10];
    printf("\nEnter the number of Frames : ");
    scanf("%d",&fno);
    printf("\nEnter number of reference string :");
    scanf("%d",&n);
    printf("\n Enter the Reference string :\n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<fno;i++)
    {
        frame[i]= -1;
        lru[i] = 0;
    }
    printf("\nLRU PAGE REPLACEMENT ALGORITHM\n\nThe given reference string is:\n\n");
    for(i=0;i<n;i++)
    {
        printf(" %d ",a[i]);
    }
    printf("\n");
    j=0;
    for(i=0;i<n;i++)
    {
        max = 0;
        flag=0;
        printf("\nReference No %d-> ",a[i]);
        avail=0;
        for(k=0;k<fno;k++)
            if(frame[k]==a[i])
                {
                    avail=1;
                    lru[k]=0;
                    break;
                }
        if(avail==1)
        {
            for(k=0;k<fno;k++)
                if(frame[k]!=-1)
                    ++lru[k];
                max = 0;
                for(k=1;k<fno;k++)
                  if(lru[k]>lru[max])
                        max = k;
                j = max;
        }
        if(avail==0)
        {
            lru[j]=0;
            frame[j]=a[i];
            for(k=0;k<fno;k++)
            {
                if(frame[k]!=-1)
                     ++lru[k];
                else
                {
                    j = k;
                    flag = 1;
                    break;
                }
            }
            if(flag==0)
            {
                max = 0;
                for(k=1;k<fno;k++)
                  if(lru[k]>lru[max])
                        max = k;
                j = max;
            }
            pagefault++;
            for(k=0;k<fno;k++)
                if(frame[k]!=-1)
                    printf(" %2d",frame[k]);
        }
        printf("\n");
    }
    printf("\nPage Fault Is %d",pagefault);
    return 0;
}
#############################OPTIMAL################################################################################
#include<stdio.h>
int main()
{
    int i,j,l,min,flag1,n,a[50],temp,frame[10],flag,fno,k,avail,pagefault=0,opt[10];
    printf("\nEnter the number of Frames : ");
    scanf("%d",&fno);
    printf("\nEnter number of reference string :");
    scanf("%d",&n);
    printf("\n Enter the Reference string :\n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<fno;i++)
    {
        frame[i]= -1;
        opt[i]=0;
    }
    printf("\nOPTIMAL PAGE REPLACEMENT ALGORITHM\n\nThe given reference string is:\n\n");
    for(i=0;i<n;i++)
        printf(" %d ",a[i]);
    printf("\n");
    j=0;
    for(i=0;i<n;i++)
    {
        flag=0;
        flag1=0;
        printf("\nReference No %d-> ",a[i]);
        avail=0;
        for(k=0;k<fno;k++)
            if(frame[k]==a[i])
                {
                    avail=1;
                    break;
                }
        if(avail==0)
        {
            temp = frame[j];
            frame[j]=a[i];
            for(k=0;k<fno;k++)
            {
                if(frame[k]==-1)
                {
                    j = k;
                    flag = 1;
                    break;
                }
            }
            if(flag==0)
            {
                for(k=0;k<fno;k++)
                {
                    opt[k]=0;
                    for(l=i;l<n;l++)
                    {
                        if(frame[k]==a[l])
                        {
                            flag1 = 1;
                            break;
                        }
                    }
                    if(flag1==1)
                        opt[k] = l-i;
                    else
                    {
                         opt[k] = -1;
                        break;
                    }
                }
                min = 0;
                for(k=0;k<fno;k++)
                    if(opt[k]<opt[min]&&opt[k]!=-1)
                        min = k;
                    else if(opt[k]==-1)
                    {
                        min = k;
                        frame[j] = temp;
                        frame[k] = a[i];
                        break;
                    }
                j = min;
            }
            pagefault++;
            for(k=0;k<fno;k++)
                if(frame[k]!=-1)
                    printf(" %2d",frame[k]);
        }
        printf("\n");
    }
    printf("\nPage Fault Is %d",pagefault);
    return 0;
}
